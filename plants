#!/bin/ksh
##Potaje6
#Because every living being need their scheduling for food
#Stay hydrated bro
#86400 = 1 day
#date +%s
##ToDo, create a plant db to put a different time for each one

export DISPLAY=:0
EXEC_DIR=$(dirname $0)
EXEC_NAME=$(basename $0)
PLANT_NAME=$1
PERIOD=15
EPOCH_TIME=$(date +%s)
SOUND=/home/dmolinao/alla/infidel/nr1.mp3.wav
HISTORY_FILE=$EXEC_DIR/parametros/$PLANT_NAME



print_uso(){
cat <<EOF
Usage: ./$EXEC_NAME PLANT_NAME [arguments]
-w watered the plant, will add an entry in his history calculate when it needs to be watered again

Plant history will be searched in $HISTORY_FILE

When the time to water the plant reaches it will spam until you do it.
Do it, faggit
EOF
exit
}

if [ $# -eq 0 ];then
	echo "No parameters given!"
	print_uso
else
	test -d $EXEC_DIR/parametros || mkdir $EXEC_DIR/parametros
	if [ $? -ne 0 ]; then
		echo "Plant $PLANT_NAME doesn't exist, creating it"
		echo $EPOCH_TIME > $HISTORY_FILE
	fi
	LAST_HYDRATION=$(tail -n 1 $HISTORY_FILE)
fi

while [ $# -gt 0 ];
do
    case $1 in
-w) echo $EPOCH_TIME >> $HISTORY_FILE
echo "$PLANT_NAME HYDRATION COMPLETE!"
echo "NEXT HYDRATION $(date -d "+$PERIOD days")"
echo "STAY HYDRATED HOMIE"
exit
;;
*) shift
;;
esac
done

TIME_PASSED=$(expr $EPOCH_TIME - $LAST_HYDRATION)
if [ $TIME_PASSED -gt $(expr $EPOCH_TIME - $(date -d "-$PERIOD days" +%s)) ]; then
	test -f $SOUND && aplay $SOUND > /dev/null 2>&1 &
	zenity --warning --text="FUCKING $PLANT_NAME REQUIRES FUCKING HYDRATION" --title "HYDROBOT" > /dev/null 2>&1
else
	cat <<EOF
$PLANT_NAME IS FUCKING HYDRATED, NEXT HYDRATION
EOF
	date -d @$(expr $LAST_HYDRATION + $(expr 86400 \* $PERIOD))
fi