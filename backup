#!/bin/ksh
##Daniel Molina
BACKUPDIR=/home/dmolinao/backups
APP=TS3_Pirata
RETENC=1000000
HOST=analcunt.ddns.net
LUSER=root
SOURCE=/apps/TS3_Server
HORA=+%Y-%m-%d--%H:%M:%S
i=0
NOPURGE=0


trap force_exit SIGINT


force_exit(){
        echo 
        echo "Deleting temp folder"
        rm -rvf $BACKUPFULLDIR/temp        
        exit 3
}


print_uso(){
cat <<EOF
Script para hacer backups
-a carpeta de la aplicacion de la que se quiere hacer backup Default:$APP
-H host Default:$HOST
-u usuario Default:$LUSER
-K key rsa 
-b ruta donde se guardaran los backups Default:$BACKUPDIR
-r Retencion, OJO!!!, esta restara a la salida de $(date +%Y%m%d%H%M) el timestamp del backup, para un mes haria falta una retencion de 1000000 Default:$RETENC
-p ejecutar solo la funcion de purgar
-s directorio a descargar del servidor remoto Default:$SOURCE
-h mostrar este mensaje
-np no ejecutar la funcion de purgado de backups viejos al final del script

EOF
}

BACKUPFULLDIR=$BACKUPDIR/$APP
BACKUPTARFILE=$BACKUPFULLDIR/$APP$(date +%Y%m%d%H%M).tar.gz

purge_backups(){
	ls -1 $BACKUPFULLDIR| sed "s/$APP//" | sed "s/\.tar.gz//" | while read FECHA_BACKUP; do
		EXPIRED=$(echo "$(date +%Y%m%d%H%M)-$FECHA_BACKUP" | bc)
		if [ "$EXPIRED" -gt "$RETENC" ]; then
#		echo "el backup de $APP del dÃ­a $FECHA_BACKUP ha expirado, borrar?[y,n] " 
#		read DELETE
#		case $DELETE in
#			"y") echo "Borrando $BACKUPFULLDIR/$APP$FECHA_BACKUP.tar"
#			rm -f $BACKUPFULLDIR/$APP$FECHA_BACKUP.tar
#			;;
#			"n") echo "Conservando $BACKUPFULLDIR/$APP$FECHA_BACKUP.tar"
#			;;
#		esac
			echo "Borrando $BACKUPFULLDIR/$APP$FECHA_BACKUP.tar"
			rm -f $BACKUPFULLDIR/$APP$FECHA_BACKUP.tar.gz
                        i=$(($i+1))
		#else
			#echo "Backup $BACKUPFULLDIR/$APP$FECHA_BACKUP.tar no expirado"

		fi
	done
        echo "$(date $HORA)--------Finalizado proceso de purgado, $i Backups purgados"

}

while [ $# -gt 0 ];
do
        case $1 in
        "-a") APP=$2
        shift
;;
        "-r") RETENC=$2
        shift
;;
        "-H") HOST=$2
        shift
;;
        "-u") LUSER=$2
        shift
;;
        "-K") KEY=$2
        shift
;;
        "-b") BACKUPDIR=$2
        shift
;;
        "-s") SOURCE=$2
        shift
;;
        "-h") print_uso
        exit
;;
        "-p") purge_backups
        exit
;;
        "-np") NOPURGE=1
        exit
;;
        *)
        shift
esac
done





if [ ! -d "$BACKUPFULLDIR/temp" ]; then
	mkdir -p $BACKUPFULLDIR/temp
fi

if [ ! -z $KEY ]; then
	RSA_OPTION=-e
	RSA_KEY="ssh -i $KEY "
fi

#-e '"ssh' -i '../.ssh/key_vps"'


echo "$(date $HORA)--------Recibiendo datos del backup"
/usr/bin/rsync -avzh $RSA_OPTION "${RSA_KEY}" $LUSER@$HOST:$SOURCE $BACKUPFULLDIR/temp
if [ $? -ne 0 ]; then
	echo "Error al recibir los datos, saliendo..."
	exit
fi

echo "$(date $HORA)--------Empaquetando datos del backup en $BACKUPTARFILE y borRando carpeta temporal"

tar cvzf $BACKUPTARFILE -C $BACKUPFULLDIR/temp . && rm -rf $BACKUPFULLDIR/temp




if [ $? -ne 0 ]; then
	echo "$(date $HORA)--------Error al empaquetar y borrar temporal, saliendo..."
	exit
fi

echo "$(date $HORA)--------backup creado de $LUSER@$HOST:$SOURCE $BACKUPTARFILE"

if [ "$NOPURGE" -ne 1 ]; then
purge_backups
fi