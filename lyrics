#!/bin/ksh
#Script to search songs and get lyrics by terminal
##Srsly, why u do dis, get cancer fucktard, this is even worse than ur first scripts
##ToDo A lot of bugfixes, so far works fine in both modes

#to get spotify currently playing
#SONG=$(dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:org.mpris.MediaPlayer2.Player string:Metadata | sed -n '/title/{n;p}' | cut -d '"' -f 2)
#ARTIST=$(dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:org.mpris.MediaPlayer2.Player string:Metadata | grep -A2 artist | tail -1 | cut -d '"' -f 2)

#test number
re='^[0-9]+$'

TMP_FILE=/var/tmp/$$
TMP_FILE_PARSED=/var/tmp/${$}_final
LESS=$(which less)
SPOTIMODE=0
NOT_FOUND=0
#for spotify purposes, i swear!
CHOICE=0

trap force_exit SIGINT SIGTERM

print_uso(){
	cat <<EOF
	./lyrics [--spotify/--cmus] Song title
	--spotify to search lyrics of song currently playing on spotify, updates after changing song
	--cmus to search lyrics of song currently playing on cmus, updates after changing song
EOF
}

force_exit(){
        rm -f $TMP_FILE
        rm -f $TMP_FILE_PARSED
        exit 
}

search(){
##SEARCH##
#spotify mode use always first choice and shows lyrics with cat instead of less
unset i
if [ "$1" == "-s" ]; then
	SPOTIMODE=1
	LESS=$(which cat)
	CHOICE=1
	shift
fi
SEARCH=$(echo $@|tr -s [:blank:] \+)

curl -s https://search.azlyrics.com/search.php?q=$SEARCH | grep "target=\"_blank" |tr -s [:blank:] | sed 's/^\ //g' | sed 's/. <a href="/ /g' | sed 's/" target="_blank"><b>/ /' | sed 's/<..>//g' | sed 's/<.>//g' | grep "/lyrics/" | while read NUMBER LINK NAME; do 
i=$(($i+1))

echo $i $NAME 
LINK[$i]=$LINK
NAME[$i]=$NAME
done
if [ -z "$i" ] ; then
	echo "Song not found"
	NOT_FOUND=1
	>$TMP_FILE_PARSED
	>$TMP_FILE
	if [ "$SPOTIMODE" -eq 1 ]; then
		echo
	else
		force_exit
	fi
else
	NOT_FOUND=0
fi


if [ "$SPOTIMODE" -eq 0 ]; then
echo "Select desired song"
read CHOICE
fi


if [ "$CHOICE" -eq 0 ]; then
	read CHOICE
fi

if ! [[ "$CHOICE" =~ $re ]] ; then
   echo "U dont know how to read bruh?"
   exit
fi

if [ $NOT_FOUND -eq 0 ]; then  
echo "###${NAME[$CHOICE]}" > $TMP_FILE_PARSED
lynx -source ${LINK[$CHOICE]} > $TMP_FILE
#Pleistoceno mode
#get line range of song
unset LINE_START
unset LINE_END
unset LINE_START
unset LINE_END
LINE_START=$(grep -n "Usage of azlyrics.com content by any third-party lyrics provider is prohibited by our licensing agreement. Sorry about that." $TMP_FILE | cut -f 1 -d ":")	
LINE_END=$(grep -n "MxM banner" $TMP_FILE | cut -f 1 -d ":")
LINE_START=$(($LINE_START+1))
LINE_END=$(($LINE_END-5))
sed -n ${LINE_START},${LINE_END}p /var/tmp/$$ | sed 's/<br>//g' | sed 's/<i>//g' | sed 's/<\/i>//g' | sed 's/&quot;/"/g' >> $TMP_FILE_PARSED
#Because it comes with cancer from microsoft
dos2unix -q $TMP_FILE_PARSED
#Do it faggot
clear
$LESS $TMP_FILE_PARSED
fi
}
##END OF SEARCH

spotify_mode(){
SONG=$(dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:org.mpris.MediaPlayer2.Player string:Metadata | sed -n '/title/{n;p}' | cut -d '"' -f 2 | awk -F " - " '{print $1}')
ARTIST=$(dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:org.mpris.MediaPlayer2.Player string:Metadata | grep -A2 artist | tail -1 | cut -d '"' -f 2)

OLD_SONG=$SONG
OLD_ARTIST=$ARTIST
search -s $ARTIST $SONG

##Get in, we're invading france
while true ; do
	SONG=$(dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:org.mpris.MediaPlayer2.Player string:Metadata | sed -n '/title/{n;p}' | cut -d '"' -f 2)
	ARTIST=$(dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:org.mpris.MediaPlayer2.Player string:Metadata | grep -A2 artist | tail -1 | cut -d '"' -f 2)
	if [ ! "$SONG" == "$OLD_SONG" ] || [ ! "$ARTIST" == "$OLD_ARTIST" ];then
		clear
		search -s $SONG $ARTIST
		OLD_SONG=$SONG
		OLD_ARTIST=$ARTIST
	fi
	sleep 5
done
}

cmus_mode(){
SONG=$(cmus-remote -Q | grep tag | head -n 3  | sort -r | cut -d ' ' -f 3-  | sed -n 1p | awk -F " - " '{print $1}' | awk -F \( '{print $1}')
ARTIST=$(cmus-remote -Q | grep tag | head -n 3  | sort -r | cut -d ' ' -f 3-  | sed -n 2p)

OLD_SONG=$SONG
OLD_ARTIST=$ARTIST
search -s $ARTIST $SONG

##Get in, we're invading france - budget mode
while true ; do
	SONG=$(cmus-remote -Q | grep tag | head -n 3  | sort -r | cut -d ' ' -f 3-  | sed -n 1p | awk -F " - " '{print $1}' | awk -F \( '{print $1}')
	ARTIST=$(cmus-remote -Q | grep tag | head -n 3  | sort -r | cut -d ' ' -f 3-  | sed -n 2p)
	if [ ! "$SONG" == "$OLD_SONG" ] || [ ! "$ARTIST" == "$OLD_ARTIST" ];then
		clear
		search -s $SONG $ARTIST
		OLD_SONG=$SONG
		OLD_ARTIST=$ARTIST
	fi
	sleep 5
done
}

if [ -z "$@" ]; then
print_uso
exit 
fi

if [ $# -eq 0 ];then
print_uso
fi

while [ $# -gt 0 ];
do
    case $1 in
-h)     
print_uso
;;
--spotify) spotify_mode
;;
--cmus) cmus_mode
;;
*) break
;;
esac
done

search $@



force_exit